{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, UseState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch, PostReturnData, PostReturnReasons } from '../Actions';\nimport { reasons } from '../components/reasons';\nimport { HelpBlock, Form, FormControl, FormGroup, IconButton, Icon, FlexboxGrid, Checkbox, InputPicker, CheckboxGroup, Schema, Radio, RadioGroup, Input, Button } from 'rsuite';\nimport { useHistory, useParams } from 'react-router';\n\nconst ItemSelect = ({\n  activeOrder,\n  orderNumber,\n  postReturn,\n  postReasons,\n  ret\n}) => {\n  _s();\n\n  const {\n    order\n  } = useParams();\n  const {\n    ArrayType\n  } = Schema.Types;\n  const model = Schema.Model({\n    ReturnItems: ArrayType()\n  });\n  const [returnOrder, setReturnOrder] = useState();\n  const [returnitems, setReturnitems] = useState([]);\n  const show = activeOrder;\n  const returnInfo = {};\n  returnInfo.name = returnOrder ? returnOrder.name : null;\n  returnInfo.items = returnitems;\n  returnInfo.contact = returnOrder ? returnOrder.email : null;\n  const history = useHistory();\n\n  const handleConfirm = () => {\n    postReasons(returnInfo);\n  };\n\n  const handleNext = () => {//  postReturn(returnOrder);\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  console.log(returnInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FlexboxGrid, {\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Returns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Order Number: \", orderNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 20,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          model: model,\n          fluid: true,\n          onChange: formValue => {\n            console.log(formValue);\n            setReturnOrder(formValue);\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            name: \"items\",\n            children: /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n              justify: \"space-around\",\n              align: \"top\",\n              children: /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n                children: show && show.map((items, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(ItemCard, {\n                      items: items\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(InputPicker, {\n                      data: reasons,\n                      onChange: value => {\n                        let newArr = [...returnitems];\n                        newArr[index] = {\n                          reason: value,\n                          item: items.itemid,\n                          itemName: items.itemname\n                        };\n                        setReturnitems(newArr);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 27\n                    }, this)]\n                  }, items.itemid, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            name: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              name: \"email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n              tooltip: true,\n              children: \"This is how we will contact you if needed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              name: \"name\",\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n              tooltip: true,\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n              justify: \"space-around\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleConfirm,\n                style: {\n                  margin: 7\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), orderNumber ? /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  margin: 7\n                },\n                onClick: handleNext,\n                icon: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: \"arrow-right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 27\n                }, this),\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemSelect, \"q3eUhTOYE8UyKr+XJiDgLqHpUKc=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ItemSelect;\n\nconst mapStateToProps = state => ({\n  // returnData: state.activeReturn.retunNo,\n  activeOrder: state.activeOrder.basket,\n  returnData: state.activeReturn\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postReturn: returnOrder => dispatch(PostReturnData(returnOrder)),\n    postReasons: returnItems => dispatch(PostReturnReasons(returnItems))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemSelect);\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemSelect\");","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js"],"names":["React","useState","UseState","ItemCard","connect","fetchMyOrder","fetch","PostReturnData","PostReturnReasons","reasons","HelpBlock","Form","FormControl","FormGroup","IconButton","Icon","FlexboxGrid","Checkbox","InputPicker","CheckboxGroup","Schema","Radio","RadioGroup","Input","Button","useHistory","useParams","ItemSelect","activeOrder","orderNumber","postReturn","postReasons","ret","order","ArrayType","Types","model","Model","ReturnItems","returnOrder","setReturnOrder","returnitems","setReturnitems","show","returnInfo","name","items","contact","email","history","handleConfirm","handleNext","handleBack","goBack","console","log","formValue","map","index","value","newArr","reason","item","itemid","itemName","itemname","margin","mapStateToProps","state","basket","returnData","activeReturn","mapDispatchToProps","dispatch","returnItems"],"mappings":"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","sourcesContent":["import React, { useState, UseState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport {\n  fetchMyOrder,\n  fetch,\n  PostReturnData,\n  PostReturnReasons,\n} from '../Actions';\nimport { reasons } from '../components/reasons';\n\nimport {\n  HelpBlock,\n  Form,\n  FormControl,\n  FormGroup,\n  IconButton,\n  Icon,\n  FlexboxGrid,\n  Checkbox,\n  InputPicker,\n  CheckboxGroup,\n  Schema,\n  Radio,\n  RadioGroup,\n  Input,\n  Button,\n} from 'rsuite';\nimport { useHistory, useParams } from 'react-router';\n\nconst ItemSelect = ({\n  activeOrder,\n  orderNumber,\n  postReturn,\n  postReasons,\n  ret,\n}) => {\n  const { order } = useParams();\n  const { ArrayType } = Schema.Types;\n  const model = Schema.Model({\n    ReturnItems: ArrayType(),\n  });\n\n  const [returnOrder, setReturnOrder] = useState();\n  const [returnitems, setReturnitems] = useState([]);\n\n  const show = activeOrder;\n\n  const returnInfo = {};\n\n  returnInfo.name = returnOrder ? returnOrder.name : null;\n  returnInfo.items = returnitems;\n  returnInfo.contact = returnOrder ? returnOrder.email : null;\n\n  const history = useHistory();\n\n  const handleConfirm = () => {\n    postReasons(returnInfo);\n  };\n\n  const handleNext = () => {\n    //  postReturn(returnOrder);\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  console.log(returnInfo);\n\n  return (\n    <div>\n      <FlexboxGrid justify='center'>\n        <FlexboxGrid.Item colspan={18}>\n          <h1>Returns</h1>\n        </FlexboxGrid.Item>\n        <FlexboxGrid.Item colspan={18}>\n          <h4>Order Number: {orderNumber}</h4>\n        </FlexboxGrid.Item>\n        <FlexboxGrid.Item colspan={20}>\n          <Form\n            model={model}\n            fluid\n            onChange={(formValue) => {\n              console.log(formValue);\n              setReturnOrder(formValue);\n            }}\n          >\n            <FormGroup name='items'>\n              <FlexboxGrid justify='space-around' align='top'>\n                <FlexboxGrid.Item>\n                  {show &&\n                    show.map((items, index) => {\n                      return (\n                        <div key={items.itemid}>\n                          <ItemCard items={items} />\n                          <InputPicker\n                            data={reasons}\n                            onChange={(value) => {\n                              let newArr = [...returnitems];\n                              newArr[index] = {\n                                reason: value,\n                                item: items.itemid,\n                                itemName: items.itemname,\n                              };\n                              setReturnitems(newArr);\n                            }}\n                          />\n                        </div>\n                      );\n                    })}\n                </FlexboxGrid.Item>\n              </FlexboxGrid>\n            </FormGroup>\n\n            <FormGroup name='info'>\n              <FormControl name='email' placeholder='Email' />\n              <HelpBlock tooltip>\n                This is how we will contact you if needed\n              </HelpBlock>\n            </FormGroup>\n\n            <FormGroup>\n              <FormControl name='name' placeholder='Name' />\n              <HelpBlock tooltip>This field is required</HelpBlock>\n            </FormGroup>\n\n            <FormGroup>\n              <FlexboxGrid justify='space-around'>\n                <Button onClick={handleConfirm} style={{ margin: 7 }}>\n                  Submit\n                </Button>\n\n                {orderNumber ? (\n                  <IconButton\n                    style={{ margin: 7 }}\n                    onClick={handleNext}\n                    icon={<Icon icon='arrow-right' />}\n                  >\n                    Next\n                  </IconButton>\n                ) : null}\n              </FlexboxGrid>\n            </FormGroup>\n          </Form>\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n      );\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  // returnData: state.activeReturn.retunNo,\n  activeOrder: state.activeOrder.basket,\n  returnData: state.activeReturn,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    postReturn: (returnOrder) => dispatch(PostReturnData(returnOrder)),\n    postReasons: (returnItems) => dispatch(PostReturnReasons(returnItems)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemSelect);\n"]},"metadata":{},"sourceType":"module"}