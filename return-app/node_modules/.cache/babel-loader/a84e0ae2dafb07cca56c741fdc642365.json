{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js\";\nimport React, { Component } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { HelpBlock, Form, FormControl, FormGroup, IconButton, Icon, FlexboxGrid, Button } from 'rsuite';\nimport { FetchOrders } from '../Actions';\n\nconst ItemSelect = ({\n  activeOrder\n}) => {\n  const data = [{\n    image: 'Shocks',\n    size: 7,\n    id: 30494\n  }];\n  const showing = true;\n  console.log(activeOrder);\n\n  const handleClick = () => {\n    FetchOrders();\n  };\n\n  return /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n      colspan: 18,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Returns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n      colspan: 18,\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Order Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n      colspan: 20,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: activeOrder.map(items => {\n            return /*#__PURE__*/_jsxDEV(ItemCard, {\n              items: items\n            }, items.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            name: \"email\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n            tooltip: true,\n            children: \"This is where will will send the return label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            name: \"name\",\n            placeholder: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n            tooltip: true,\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleClick,\n            icon: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"arrow-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this),\n            disabled: showing ? false : true,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ItemSelect;\n\nconst mapStateToProps = state => ({\n  activeOrder: state.activeOrder.orderdata\n});\n\nexport default connect(mapStateToProps)(ItemSelect);\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemSelect\");","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js"],"names":["React","Component","ItemCard","connect","HelpBlock","Form","FormControl","FormGroup","IconButton","Icon","FlexboxGrid","Button","FetchOrders","ItemSelect","activeOrder","data","image","size","id","showing","console","log","handleClick","map","items","mapStateToProps","state","orderdata"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\n\nimport {\n  HelpBlock,\n  Form,\n  FormControl,\n  FormGroup,\n  IconButton,\n  Icon,\n  FlexboxGrid,\n  Button,\n} from 'rsuite';\nimport { FetchOrders } from '../Actions';\n\nconst ItemSelect = ({ activeOrder }) => {\n  const data = [\n    {\n      image: 'Shocks',\n      size: 7,\n      id: 30494,\n    },\n  ];\n\n  const showing = true;\n\n  console.log(activeOrder);\n\n  const handleClick = () => {\n    FetchOrders();\n  };\n\n  return (\n    <FlexboxGrid justify='center'>\n      <FlexboxGrid.Item colspan={18}>\n        <h1>Returns</h1>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item colspan={18}>\n        <h4>Order Number:</h4>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item colspan={20}>\n        <Form fluid>\n          <FormGroup>\n            {activeOrder.map((items) => {\n              return <ItemCard items={items} key={items.id} />;\n            })}\n          </FormGroup>\n\n          <FormGroup>\n            <FormControl name='email' placeholder='Email' />\n            <HelpBlock tooltip>\n              This is where will will send the return label\n            </HelpBlock>\n          </FormGroup>\n\n          <FormGroup>\n            <FormControl name='name' placeholder='Name' />\n            <HelpBlock tooltip>This field is required</HelpBlock>\n          </FormGroup>\n\n          <FormGroup>\n            <IconButton\n              onClick={handleClick}\n              icon={<Icon icon='arrow-right' />}\n              disabled={showing ? false : true}\n            >\n              Next\n            </IconButton>\n          </FormGroup>\n        </Form>\n      </FlexboxGrid.Item>\n    </FlexboxGrid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  activeOrder: state.activeOrder.orderdata,\n});\n\nexport default connect(mapStateToProps)(ItemSelect);\n"]},"metadata":{},"sourceType":"module"}