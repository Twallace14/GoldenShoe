{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/new.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, UseState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch, PostReturnData } from '../Actions';\nimport { reasons } from '../components/reasons';\nimport { HelpBlock, Form, FormControl, FormGroup, IconButton, Icon, FlexboxGrid, Checkbox, InputPicker, CheckboxGroup, Schema, Radio, RadioGroup, InputGroup, Input } from 'rsuite';\nimport { useHistory } from 'react-router';\nimport FlexboxGridItem from 'rsuite/lib/FlexboxGrid/FlexboxGridItem';\n\nconst Newv = ({\n  activeOrder,\n  orderNumber,\n  postReturn\n}) => {\n  _s();\n\n  const {\n    ArrayType\n  } = Schema.Types;\n  const model = Schema.Model({\n    ReturnItems: ArrayType()\n  });\n  const [returnEmail, setReturnEmail] = useState();\n  const [returnitems, setReturnitems] = useState();\n  const [returnName, setReturnName] = useState();\n  const [returnReason, setReturnReason] = useState();\n  const show = activeOrder;\n  console.log(returnEmail);\n  console.log(returnitems);\n  console.log(returnName);\n  console.log(returnReason);\n\n  const handleSubmit = () => {\n    console.log('yoo');\n  };\n\n  const history = useHistory();\n\n  const handleNext = () => {\n    history.push('./printlabel');\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Returns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Order Number: \", orderNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 20,\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Addon, {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            onChange: value => {\n              setReturnName(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGridItem, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n          onChange: value => {\n            setReturnitems(value);\n          },\n          name: \"ReturnItems\",\n          inline: true,\n          children: show && show.map(items => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                value: items,\n                children: \"return\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ItemCard, {\n                items: items\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onChange: formvalue => {\n                  setReturnReason(...returnReason, formvalue);\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  accepter: InputPicker,\n                  data: reasons,\n                  name: items.itemid\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)]\n            }, items.size, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 20,\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Addon, {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            onChange: value => {\n              setReturnEmail(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Newv, \"jLlOButJ9AkCpT8B+/ZOPIFlC/s=\", false, function () {\n  return [useHistory];\n});\n\n_c = Newv;\n\nconst mapStateToProps = state => ({\n  activeOrder: state.activeOrder.basket,\n  orderNumber: state.activeOrder.userOrder\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postReturn: returnItems => dispatch(PostReturnData(returnItems))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Newv);\n\nvar _c;\n\n$RefreshReg$(_c, \"Newv\");","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/new.js"],"names":["React","useState","UseState","ItemCard","connect","fetchMyOrder","fetch","PostReturnData","reasons","HelpBlock","Form","FormControl","FormGroup","IconButton","Icon","FlexboxGrid","Checkbox","InputPicker","CheckboxGroup","Schema","Radio","RadioGroup","InputGroup","Input","useHistory","FlexboxGridItem","Newv","activeOrder","orderNumber","postReturn","ArrayType","Types","model","Model","ReturnItems","returnEmail","setReturnEmail","returnitems","setReturnitems","returnName","setReturnName","returnReason","setReturnReason","show","console","log","handleSubmit","history","handleNext","push","handleBack","goBack","value","map","items","formvalue","itemid","size","mapStateToProps","state","basket","userOrder","mapDispatchToProps","dispatch","returnItems"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,cAA9B,QAAoD,YAApD;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,SACEC,SADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,UALF,EAMEC,IANF,EAOEC,WAPF,EAQEC,QARF,EASEC,WATF,EAUEC,aAVF,EAWEC,MAXF,EAYEC,KAZF,EAaEC,UAbF,EAcEC,UAdF,EAeEC,KAfF,QAgBO,QAhBP;AAiBA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,eAAP,MAA4B,wCAA5B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA;AAA5B,CAAD,KAA8C;AAAA;;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAgBX,MAAM,CAACY,KAA7B;AACA,QAAMC,KAAK,GAAGb,MAAM,CAACc,KAAP,CAAa;AACzBC,IAAAA,WAAW,EAAEJ,SAAS;AADG,GAAb,CAAd;AAIA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,EAA9C;AACA,QAAM,CAACoC,WAAD,EAAcC,cAAd,IAAgCrC,QAAQ,EAA9C;AACA,QAAM,CAACsC,UAAD,EAAaC,aAAb,IAA8BvC,QAAQ,EAA5C;AACA,QAAM,CAACwC,YAAD,EAAeC,eAAf,IAAkCzC,QAAQ,EAAhD;AAEA,QAAM0C,IAAI,GAAGhB,WAAb;AAEAiB,EAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;;AAEA,QAAMK,YAAY,GAAG,MAAM;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,GAFD;;AAIA,QAAME,OAAO,GAAGvB,UAAU,EAA1B;;AAEA,QAAMwB,UAAU,GAAG,MAAM;AACvBD,IAAAA,OAAO,CAACE,IAAR,CAAa,cAAb;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBH,IAAAA,OAAO,CAACI,MAAR;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAC,QAArB;AAAA,8BACE,QAAC,WAAD,CAAa,IAAb;AAAkB,QAAA,OAAO,EAAE,EAA3B;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,WAAD,CAAa,IAAb;AAAkB,QAAA,OAAO,EAAE,EAA3B;AAAA,+BACE;AAAA,uCAAmBvB,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE,QAAC,WAAD,CAAa,IAAb;AAAkB,QAAA,OAAO,EAAE,EAA3B;AAAA,+BACE,QAAC,UAAD;AAAA,kCACE,QAAC,UAAD,CAAY,KAAZ;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AACE,YAAA,QAAQ,EAAGwB,KAAD,IAAW;AACnBZ,cAAAA,aAAa,CAACY,KAAD,CAAb;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAoBE,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,EAA1B;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,QAAQ,EAAGA,KAAD,IAAW;AACnBd,YAAAA,cAAc,CAACc,KAAD,CAAd;AACD,WAHH;AAIE,UAAA,IAAI,EAAC,aAJP;AAKE,UAAA,MAAM,MALR;AAAA,oBAOGT,IAAI,IACHA,IAAI,CAACU,GAAL,CAAUC,KAAD,IAAW;AAClB,gCACE;AAAA,sCACE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,IAAD;AACE,gBAAA,QAAQ,EAAGC,SAAD,IAAe;AACvBb,kBAAAA,eAAe,CAAC,GAAGD,YAAJ,EAAkBc,SAAlB,CAAf;AACD,iBAHH;AAAA,uCAKE,QAAC,WAAD;AACE,kBAAA,QAAQ,EAAEtC,WADZ;AAEE,kBAAA,IAAI,EAAET,OAFR;AAGE,kBAAA,IAAI,EAAE8C,KAAK,CAACE;AAHd;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA,eAAUF,KAAK,CAACG,IAAhB;AAAA;AAAA;AAAA;AAAA,oBADF;AAiBD,WAlBD;AARJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApBF,eAmDE,QAAC,WAAD,CAAa,IAAb;AAAkB,QAAA,OAAO,EAAE,EAA3B;AAAA,+BACE,QAAC,UAAD;AAAA,kCACE,QAAC,UAAD,CAAY,KAAZ;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AACE,YAAA,QAAQ,EAAGL,KAAD,IAAW;AACnBhB,cAAAA,cAAc,CAACgB,KAAD,CAAd;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoED,CApGD;;GAAM1B,I;UAsBYF,U;;;KAtBZE,I;;AAsGN,MAAMgC,eAAe,GAAIC,KAAD,KAAY;AAClChC,EAAAA,WAAW,EAAEgC,KAAK,CAAChC,WAAN,CAAkBiC,MADG;AAElChC,EAAAA,WAAW,EAAE+B,KAAK,CAAChC,WAAN,CAAkBkC;AAFG,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLlC,IAAAA,UAAU,EAAGmC,WAAD,IAAiBD,QAAQ,CAACxD,cAAc,CAACyD,WAAD,CAAf;AADhC,GAAP;AAGD,CAJD;;AAMA,eAAe5D,OAAO,CAACsD,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CpC,IAA7C,CAAf","sourcesContent":["import React, { useState, UseState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch, PostReturnData } from '../Actions';\nimport { reasons } from '../components/reasons';\n\nimport {\n  HelpBlock,\n  Form,\n  FormControl,\n  FormGroup,\n  IconButton,\n  Icon,\n  FlexboxGrid,\n  Checkbox,\n  InputPicker,\n  CheckboxGroup,\n  Schema,\n  Radio,\n  RadioGroup,\n  InputGroup,\n  Input,\n} from 'rsuite';\nimport { useHistory } from 'react-router';\nimport FlexboxGridItem from 'rsuite/lib/FlexboxGrid/FlexboxGridItem';\n\nconst Newv = ({ activeOrder, orderNumber, postReturn }) => {\n  const { ArrayType } = Schema.Types;\n  const model = Schema.Model({\n    ReturnItems: ArrayType(),\n  });\n\n  const [returnEmail, setReturnEmail] = useState();\n  const [returnitems, setReturnitems] = useState();\n  const [returnName, setReturnName] = useState();\n  const [returnReason, setReturnReason] = useState();\n\n  const show = activeOrder;\n\n  console.log(returnEmail);\n  console.log(returnitems);\n  console.log(returnName);\n  console.log(returnReason);\n\n  const handleSubmit = () => {\n    console.log('yoo');\n  };\n\n  const history = useHistory();\n\n  const handleNext = () => {\n    history.push('./printlabel');\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <div>\n      <FlexboxGrid justify='center'>\n        <FlexboxGrid.Item colspan={18}>\n          <h1>Returns</h1>\n        </FlexboxGrid.Item>\n        <FlexboxGrid.Item colspan={18}>\n          <h4>Order Number: {orderNumber}</h4>\n        </FlexboxGrid.Item>\n\n        <FlexboxGrid.Item colspan={20}>\n          <InputGroup>\n            <InputGroup.Addon>\n              <Icon icon='avatar' />\n            </InputGroup.Addon>\n            <Input\n              onChange={(value) => {\n                setReturnName(value);\n              }}\n            />\n          </InputGroup>\n        </FlexboxGrid.Item>\n        <FlexboxGridItem colspan={18}>\n          <CheckboxGroup\n            onChange={(value) => {\n              setReturnitems(value);\n            }}\n            name='ReturnItems'\n            inline\n          >\n            {show &&\n              show.map((items) => {\n                return (\n                  <div key={items.size}>\n                    <Checkbox value={items}>return</Checkbox>\n                    <ItemCard items={items} />\n                    <Form\n                      onChange={(formvalue) => {\n                        setReturnReason(...returnReason, formvalue);\n                      }}\n                    >\n                      <FormControl\n                        accepter={InputPicker}\n                        data={reasons}\n                        name={items.itemid}\n                      />\n                    </Form>\n                  </div>\n                );\n              })}\n          </CheckboxGroup>\n        </FlexboxGridItem>\n\n        <FlexboxGrid.Item colspan={20}>\n          <InputGroup>\n            <InputGroup.Addon>\n              <Icon icon='avatar' />\n            </InputGroup.Addon>\n            <Input\n              onChange={(value) => {\n                setReturnEmail(value);\n              }}\n            />\n          </InputGroup>\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  activeOrder: state.activeOrder.basket,\n  orderNumber: state.activeOrder.userOrder,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    postReturn: (returnItems) => dispatch(PostReturnData(returnItems)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Newv);\n"]},"metadata":{},"sourceType":"module"}