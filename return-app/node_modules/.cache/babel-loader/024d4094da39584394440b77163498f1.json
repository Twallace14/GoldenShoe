{"ast":null,"code":"import axios from 'axios';\nexport const FetchOrderData = orders => {\n  return async dispatch => {\n    console.log(orders);\n    dispatch({\n      type: 'FIND_MY_ORDER'\n    });\n    const ress = await axios.post('http://localhost:3000/fetchOrder', {\n      orderNum: orders\n    });\n    console.log(ress.data);\n\n    if (ress.data !== 'not found') {\n      dispatch(OrderData(ress.data));\n    } else {\n      console.log('waaaiit');\n      dispatch({\n        type: 'NOT_FOUND'\n      });\n    }\n  };\n};\n_c = FetchOrderData;\nexport const PostReturnData = items => {\n  return async dispatch => {\n    items.returnNo = 'kkjhvy';\n    console.log(items);\n    const move = await axios.post('http://localhost:3000/fetchOrder', {\n      returnData: items\n    });\n    dispatch({\n      type: 'MY_RETURN',\n      payload: items\n    });\n  };\n};\n_c2 = PostReturnData;\nexport const NewReturn = () => ({\n  type: 'NEW_RETURN'\n});\n_c3 = NewReturn;\nexport const fetch = async () => {\n  await axios.get('./RefundReasons.JSON').then(res => console.log(res.data));\n};\nexport const UserOrderSelection = userOrderNum => ({\n  type: 'UPDATE_ORDER_NUMBER',\n  payload: userOrderNum\n});\n_c4 = UserOrderSelection;\nexport const UpdateReturn = returningItemsArray => ({\n  type: 'RETURNING_ITEMS',\n  payload: returningItemsArray\n});\n_c5 = UpdateReturn;\nexport const OrderData = orders => ({\n  type: 'MY_ORDER',\n  payload: orders\n});\n_c6 = OrderData;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"FetchOrderData\");\n$RefreshReg$(_c2, \"PostReturnData\");\n$RefreshReg$(_c3, \"NewReturn\");\n$RefreshReg$(_c4, \"UserOrderSelection\");\n$RefreshReg$(_c5, \"UpdateReturn\");\n$RefreshReg$(_c6, \"OrderData\");","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/Actions/index.js"],"names":["axios","FetchOrderData","orders","dispatch","console","log","type","ress","post","orderNum","data","OrderData","PostReturnData","items","returnNo","move","returnData","payload","NewReturn","fetch","get","then","res","UserOrderSelection","userOrderNum","UpdateReturn","returningItemsArray"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAIC,MAAD,IAAY;AACxC,SAAO,MAAOC,QAAP,IAAoB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGA,UAAMC,IAAI,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAW,kCAAX,EAA+C;AAChEC,MAAAA,QAAQ,EAAEP;AADsD,KAA/C,CAAnB;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACG,IAAjB;;AAEA,QAAIH,IAAI,CAACG,IAAL,KAAc,WAAlB,EAA+B;AAC7BP,MAAAA,QAAQ,CAACQ,SAAS,CAACJ,IAAI,CAACG,IAAN,CAAV,CAAR;AACD,KAFD,MAEO;AACLN,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD;AACF,GAlBD;AAmBD,CApBM;KAAML,c;AAsBb,OAAO,MAAMW,cAAc,GAAIC,KAAD,IAAW;AACvC,SAAO,MAAOV,QAAP,IAAoB;AACzBU,IAAAA,KAAK,CAACC,QAAN,GAAiB,QAAjB;AAEAV,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AAEA,UAAME,IAAI,GAAG,MAAMf,KAAK,CAACQ,IAAN,CAAW,kCAAX,EAA+C;AAChEQ,MAAAA,UAAU,EAAEH;AADoD,KAA/C,CAAnB;AAIAV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,WADC;AAEPW,MAAAA,OAAO,EAAEJ;AAFF,KAAD,CAAR;AAID,GAbD;AAcD,CAfM;MAAMD,c;AAiBb,OAAO,MAAMM,SAAS,GAAG,OAAO;AAC9BZ,EAAAA,IAAI,EAAE;AADwB,CAAP,CAAlB;MAAMY,S;AAIb,OAAO,MAAMC,KAAK,GAAG,YAAY;AAC/B,QAAMnB,KAAK,CAACoB,GAAN,CAAU,sBAAV,EAAkCC,IAAlC,CAAwCC,GAAD,IAASlB,OAAO,CAACC,GAAR,CAAYiB,GAAG,CAACZ,IAAhB,CAAhD,CAAN;AACD,CAFM;AAIP,OAAO,MAAMa,kBAAkB,GAAIC,YAAD,KAAmB;AACnDlB,EAAAA,IAAI,EAAE,qBAD6C;AAEnDW,EAAAA,OAAO,EAAEO;AAF0C,CAAnB,CAA3B;MAAMD,kB;AAKb,OAAO,MAAME,YAAY,GAAIC,mBAAD,KAA0B;AACpDpB,EAAAA,IAAI,EAAE,iBAD8C;AAEpDW,EAAAA,OAAO,EAAES;AAF2C,CAA1B,CAArB;MAAMD,Y;AAKb,OAAO,MAAMd,SAAS,GAAIT,MAAD,KAAa;AACpCI,EAAAA,IAAI,EAAE,UAD8B;AAEpCW,EAAAA,OAAO,EAAEf;AAF2B,CAAb,CAAlB;MAAMS,S","sourcesContent":["import axios from 'axios';\n\nexport const FetchOrderData = (orders) => {\n  return async (dispatch) => {\n    console.log(orders);\n    dispatch({\n      type: 'FIND_MY_ORDER',\n    });\n    const ress = await axios.post('http://localhost:3000/fetchOrder', {\n      orderNum: orders,\n    });\n    console.log(ress.data);\n\n    if (ress.data !== 'not found') {\n      dispatch(OrderData(ress.data));\n    } else {\n      console.log('waaaiit');\n      dispatch({\n        type: 'NOT_FOUND',\n      });\n    }\n  };\n};\n\nexport const PostReturnData = (items) => {\n  return async (dispatch) => {\n    items.returnNo = 'kkjhvy';\n\n    console.log(items);\n\n    const move = await axios.post('http://localhost:3000/fetchOrder', {\n      returnData: items,\n    });\n\n    dispatch({\n      type: 'MY_RETURN',\n      payload: items,\n    });\n  };\n};\n\nexport const NewReturn = () => ({\n  type: 'NEW_RETURN',\n});\n\nexport const fetch = async () => {\n  await axios.get('./RefundReasons.JSON').then((res) => console.log(res.data));\n};\n\nexport const UserOrderSelection = (userOrderNum) => ({\n  type: 'UPDATE_ORDER_NUMBER',\n  payload: userOrderNum,\n});\n\nexport const UpdateReturn = (returningItemsArray) => ({\n  type: 'RETURNING_ITEMS',\n  payload: returningItemsArray,\n});\n\nexport const OrderData = (orders) => ({\n  type: 'MY_ORDER',\n  payload: orders,\n});\n"]},"metadata":{},"sourceType":"module"}