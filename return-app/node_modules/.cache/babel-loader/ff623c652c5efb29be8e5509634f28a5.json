{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, UseState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch, PostReturnData } from '../Actions';\nimport { reasons } from '../components/reasons';\nimport { HelpBlock, Form, FormControl, FormGroup, IconButton, Icon, FlexboxGrid, Checkbox, InputPicker, CheckboxGroup, Schema, RadioGroup } from 'rsuite';\nimport { useHistory } from 'react-router';\n\nconst ItemSelect = ({\n  activeOrder,\n  orderNumber,\n  postReturn\n}) => {\n  _s();\n\n  const {\n    ArrayType\n  } = Schema.Types;\n  const model = Schema.Model({\n    ReturnItems: ArrayType()\n  });\n  const [returnOrder, setReturnOrder] = useState();\n  const [returnitems, setReturnitems] = useState();\n  const show = activeOrder;\n  console.log(returnOrder);\n\n  const handleSubmit = () => {\n    console.log('yoo');\n  };\n\n  const history = useHistory();\n\n  const handleNext = () => {\n    postReturn(returnOrder);\n    history.push('./printlabel');\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FlexboxGrid, {\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Returns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Order Number: \", orderNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 20,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          model: model,\n          fluid: true,\n          onChange: formValue => {\n            console.log(formValue);\n            setReturnOrder(formValue);\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            name: \"items\",\n            children: /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n              justify: \"space-around\",\n              align: \"bottom\",\n              children: /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  accepter: CheckboxGroup,\n                  name: \"ReturnItems\",\n                  children: show && show.map(items => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                        value: items,\n                        children: \"return\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ItemCard, {\n                        items: items\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                        accepter: RadioGroup,\n                        children: [/*#__PURE__*/_jsxDEV(Radio, {\n                          value: \"A\",\n                          children: \"Item A\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 81,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                          value: \"B\",\n                          children: \"Item B\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 82,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                          value: \"C\",\n                          children: \"Item C\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 83,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 29\n                      }, this)]\n                    }, items.size, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            name: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              name: \"email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n              tooltip: true,\n              children: \"This is where will will send the return label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              name: \"name\",\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n              tooltip: true,\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleNext,\n              icon: /*#__PURE__*/_jsxDEV(Icon, {\n                icon: \"arrow-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this),\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemSelect, \"w+DwjPGkTpfvnqydhjDupq8S0cI=\", false, function () {\n  return [useHistory];\n});\n\n_c = ItemSelect;\n\nconst mapStateToProps = state => ({\n  activeOrder: state.activeOrder.basket,\n  orderNumber: state.activeOrder.userOrder\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postReturn: returnItems => dispatch(PostReturnData(returnItems))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemSelect);\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemSelect\");","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js"],"names":["React","useState","UseState","ItemCard","connect","fetchMyOrder","fetch","PostReturnData","reasons","HelpBlock","Form","FormControl","FormGroup","IconButton","Icon","FlexboxGrid","Checkbox","InputPicker","CheckboxGroup","Schema","RadioGroup","useHistory","ItemSelect","activeOrder","orderNumber","postReturn","ArrayType","Types","model","Model","ReturnItems","returnOrder","setReturnOrder","returnitems","setReturnitems","show","console","log","handleSubmit","history","handleNext","push","handleBack","goBack","formValue","map","items","size","mapStateToProps","state","basket","userOrder","mapDispatchToProps","dispatch","returnItems"],"mappings":"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","sourcesContent":["import React, { useState, UseState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch, PostReturnData } from '../Actions';\nimport { reasons } from '../components/reasons';\n\nimport {\n  HelpBlock,\n  Form,\n  FormControl,\n  FormGroup,\n  IconButton,\n  Icon,\n  FlexboxGrid,\n  Checkbox,\n  InputPicker,\n  CheckboxGroup,\n  Schema,\n  RadioGroup,\n} from 'rsuite';\nimport { useHistory } from 'react-router';\n\nconst ItemSelect = ({ activeOrder, orderNumber, postReturn }) => {\n  const { ArrayType } = Schema.Types;\n  const model = Schema.Model({\n    ReturnItems: ArrayType(),\n  });\n\n  const [returnOrder, setReturnOrder] = useState();\n  const [returnitems, setReturnitems] = useState();\n\n  const show = activeOrder;\n\n  console.log(returnOrder);\n\n  const handleSubmit = () => {\n    console.log('yoo');\n  };\n\n  const history = useHistory();\n\n  const handleNext = () => {\n    postReturn(returnOrder);\n\n    history.push('./printlabel');\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <div>\n      <FlexboxGrid justify='center'>\n        <FlexboxGrid.Item colspan={18}>\n          <h1>Returns</h1>\n        </FlexboxGrid.Item>\n        <FlexboxGrid.Item colspan={18}>\n          <h4>Order Number: {orderNumber}</h4>\n        </FlexboxGrid.Item>\n        <FlexboxGrid.Item colspan={20}>\n          <Form\n            model={model}\n            fluid\n            onChange={(formValue) => {\n              console.log(formValue);\n              setReturnOrder(formValue);\n            }}\n          >\n            <FormGroup name='items'>\n              <FlexboxGrid justify='space-around' align='bottom'>\n                <FlexboxGrid.Item>\n                  <FormControl accepter={CheckboxGroup} name='ReturnItems'>\n                    {show &&\n                      show.map((items) => {\n                        return (\n                          <div key={items.size}>\n                            <Checkbox value={items}>return</Checkbox>\n                            <ItemCard items={items} />\n                            <FormControl accepter={RadioGroup}>\n                              <Radio value='A'>Item A</Radio>\n                              <Radio value='B'>Item B</Radio>\n                              <Radio value='C'>Item C</Radio>\n                            </FormControl>\n                          </div>\n                        );\n                      })}\n                  </FormControl>\n                </FlexboxGrid.Item>\n              </FlexboxGrid>\n            </FormGroup>\n\n            <FormGroup name='info'>\n              <FormControl name='email' placeholder='Email' />\n              <HelpBlock tooltip>\n                This is where will will send the return label\n              </HelpBlock>\n            </FormGroup>\n\n            <FormGroup>\n              <FormControl name='name' placeholder='Name' />\n              <HelpBlock tooltip>This field is required</HelpBlock>\n            </FormGroup>\n\n            <FormGroup>\n              <IconButton\n                onClick={handleNext}\n                icon={<Icon icon='arrow-right' />}\n              >\n                Next\n              </IconButton>\n            </FormGroup>\n          </Form>\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n      );\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  activeOrder: state.activeOrder.basket,\n  orderNumber: state.activeOrder.userOrder,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    postReturn: (returnItems) => dispatch(PostReturnData(returnItems)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemSelect);\n"]},"metadata":{},"sourceType":"module"}