{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, UseState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch, PostReturnData, PostReturnReasons } from '../Actions';\nimport { reasons } from '../components/reasons';\nimport { HelpBlock, Form, FormControl, FormGroup, IconButton, Icon, FlexboxGrid, Checkbox, InputPicker, CheckboxGroup, Schema, Radio, RadioGroup, Input } from 'rsuite';\nimport { useHistory } from 'react-router';\n\nconst ItemSelect = ({\n  activeOrder,\n  orderNumber,\n  postReturn,\n  postReasons\n}) => {\n  _s();\n\n  const {\n    ArrayType\n  } = Schema.Types;\n  const model = Schema.Model({\n    ReturnItems: ArrayType()\n  });\n  const [returnOrder, setReturnOrder] = useState();\n  const [returnitems, setReturnitems] = useState([]);\n  const show = activeOrder;\n  console.log(returnOrder);\n  console.log(returnitems);\n\n  const handleSubmit = () => {\n    console.log('yoo');\n  };\n\n  const history = useHistory();\n\n  const handleNext = () => {\n    //  postReturn(returnOrder);\n    postReasons(returnitems); // history.push('./printlabel');\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FlexboxGrid, {\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Returns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Order Number: \", orderNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 20,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          model: model,\n          fluid: true,\n          onChange: formValue => {\n            console.log(formValue);\n            setReturnOrder(formValue);\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            name: \"items\",\n            children: /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n              justify: \"space-around\",\n              align: \"top\",\n              children: /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  accepter: CheckboxGroup,\n                  name: \"ReturnItems\",\n                  inline: true,\n                  children: show && show.map((items, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                        value: items,\n                        children: \"return\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ItemCard, {\n                        items: items\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 92,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                        name: \"radioList\",\n                        inline: true,\n                        onChange: value => {\n                          let newArr = [...returnitems];\n                          newArr[index] = {\n                            reason: value,\n                            item: items.itemid,\n                            itemName: items.itemname\n                          };\n                          setReturnitems(newArr);\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Radio, {\n                          value: \"size\",\n                          children: \"Size\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 106,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                          value: \"Colour\",\n                          children: \"Colour\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 107,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                          value: \"Style\",\n                          children: \"Style\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 108,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                          value: \"Other\",\n                          children: \"Other\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 109,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 29\n                      }, this)]\n                    }, items.size, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            name: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              name: \"email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n              tooltip: true,\n              children: \"This is where will will send the return label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              name: \"name\",\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n              tooltip: true,\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleNext,\n              icon: /*#__PURE__*/_jsxDEV(Icon, {\n                icon: \"arrow-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 23\n              }, this),\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemSelect, \"NMz1SHKFlWWgj0nFTEBfPbaR+Xo=\", false, function () {\n  return [useHistory];\n});\n\n_c = ItemSelect;\n\nconst mapStateToProps = state => ({\n  activeOrder: state.activeOrder.basket,\n  orderNumber: state.activeOrder.userOrder\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postReturn: returnOrder => dispatch(PostReturnData(returnOrder)),\n    postReasons: returnItems => dispatch(PostReturnReasons(returnItems))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemSelect);\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemSelect\");","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js"],"names":["React","useState","UseState","ItemCard","connect","fetchMyOrder","fetch","PostReturnData","PostReturnReasons","reasons","HelpBlock","Form","FormControl","FormGroup","IconButton","Icon","FlexboxGrid","Checkbox","InputPicker","CheckboxGroup","Schema","Radio","RadioGroup","Input","useHistory","ItemSelect","activeOrder","orderNumber","postReturn","postReasons","ArrayType","Types","model","Model","ReturnItems","returnOrder","setReturnOrder","returnitems","setReturnitems","show","console","log","handleSubmit","history","handleNext","handleBack","goBack","formValue","map","items","index","value","newArr","reason","item","itemid","itemName","itemname","size","mapStateToProps","state","basket","userOrder","mapDispatchToProps","dispatch","returnItems"],"mappings":"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","sourcesContent":["import React, { useState, UseState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport {\n  fetchMyOrder,\n  fetch,\n  PostReturnData,\n  PostReturnReasons,\n} from '../Actions';\nimport { reasons } from '../components/reasons';\n\nimport {\n  HelpBlock,\n  Form,\n  FormControl,\n  FormGroup,\n  IconButton,\n  Icon,\n  FlexboxGrid,\n  Checkbox,\n  InputPicker,\n  CheckboxGroup,\n  Schema,\n  Radio,\n  RadioGroup,\n  Input,\n} from 'rsuite';\nimport { useHistory } from 'react-router';\n\nconst ItemSelect = ({ activeOrder, orderNumber, postReturn, postReasons }) => {\n  const { ArrayType } = Schema.Types;\n  const model = Schema.Model({\n    ReturnItems: ArrayType(),\n  });\n\n  const [returnOrder, setReturnOrder] = useState();\n  const [returnitems, setReturnitems] = useState([]);\n\n  const show = activeOrder;\n\n  console.log(returnOrder);\n  console.log(returnitems);\n\n  const handleSubmit = () => {\n    console.log('yoo');\n  };\n\n  const history = useHistory();\n\n  const handleNext = () => {\n    //  postReturn(returnOrder);\n    postReasons(returnitems);\n\n    // history.push('./printlabel');\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <div>\n      <FlexboxGrid justify='center'>\n        <FlexboxGrid.Item colspan={18}>\n          <h1>Returns</h1>\n        </FlexboxGrid.Item>\n        <FlexboxGrid.Item colspan={18}>\n          <h4>Order Number: {orderNumber}</h4>\n        </FlexboxGrid.Item>\n        <FlexboxGrid.Item colspan={20}>\n          <Form\n            model={model}\n            fluid\n            onChange={(formValue) => {\n              console.log(formValue);\n              setReturnOrder(formValue);\n            }}\n          >\n            <FormGroup name='items'>\n              <FlexboxGrid justify='space-around' align='top'>\n                <FlexboxGrid.Item>\n                  <FormControl\n                    accepter={CheckboxGroup}\n                    name='ReturnItems'\n                    inline\n                  >\n                    {show &&\n                      show.map((items, index) => {\n                        return (\n                          <div key={items.size}>\n                            <Checkbox value={items}>return</Checkbox>\n                            <ItemCard items={items} />\n                            <RadioGroup\n                              name='radioList'\n                              inline\n                              onChange={(value) => {\n                                let newArr = [...returnitems];\n                                newArr[index] = {\n                                  reason: value,\n                                  item: items.itemid,\n                                  itemName: items.itemname,\n                                };\n                                setReturnitems(newArr);\n                              }}\n                            >\n                              <Radio value='size'>Size</Radio>\n                              <Radio value='Colour'>Colour</Radio>\n                              <Radio value='Style'>Style</Radio>\n                              <Radio value='Other'>Other</Radio>\n                            </RadioGroup>\n                          </div>\n                        );\n                      })}\n                  </FormControl>\n                </FlexboxGrid.Item>\n              </FlexboxGrid>\n            </FormGroup>\n\n            <FormGroup name='info'>\n              <FormControl name='email' placeholder='Email' />\n              <HelpBlock tooltip>\n                This is where will will send the return label\n              </HelpBlock>\n            </FormGroup>\n\n            <FormGroup>\n              <FormControl name='name' placeholder='Name' />\n              <HelpBlock tooltip>This field is required</HelpBlock>\n            </FormGroup>\n\n            <FormGroup>\n              <IconButton\n                onClick={handleNext}\n                icon={<Icon icon='arrow-right' />}\n              >\n                Next\n              </IconButton>\n            </FormGroup>\n          </Form>\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n      );\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  activeOrder: state.activeOrder.basket,\n  orderNumber: state.activeOrder.userOrder,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    postReturn: (returnOrder) => dispatch(PostReturnData(returnOrder)),\n    postReasons: (returnItems) => dispatch(PostReturnReasons(returnItems)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemSelect);\n"]},"metadata":{},"sourceType":"module"}