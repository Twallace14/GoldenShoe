{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js\";\nimport React, { useEffect, useState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch } from '../Actions';\nimport { reasons } from '../components/reasons';\nimport { HelpBlock, Form, FormControl, FormGroup, IconButton, Icon, FlexboxGrid, Checkbox, InputPicker, CheckboxGroup, Schema } from 'rsuite';\n\nclass ItemSelect extends Component {\n  render() {\n    const {\n      ArrayType,\n      StringType,\n      NumberType\n    } = Schema.Types;\n    const model = Schema.Model({\n      ReturnItems: ArrayType()\n    });\n    const showing = true;\n    const [Returning, setReturing] = useState(false);\n    const [returnBasket, setReturnBasket] = useState([]);\n    const formValue = {\n      email: '',\n      name: '',\n      returnId: 'Chrome',\n      selectReason: ['open']\n    };\n\n    const handleSubmit = () => {\n      console.log('yoo');\n    };\n\n    const handleSw = value => {\n      console.log(value);\n    };\n\n    console.log(setReturnBasket);\n    const itemList = activeOrder.map(items => {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        children: /*#__PURE__*/_jsxDEV(ItemCard, {\n          items: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, items.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FlexboxGrid, {\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n          colspan: 18,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Returns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n          colspan: 18,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Order Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n          colspan: 20,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            model: model,\n            fluid: true,\n            onChange: formValue => {\n              console.log({\n                formValue\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              name: \"items\",\n              children: /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n                justify: \"space-around\",\n                align: \"bottom\",\n                children: /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    accepter: Checkbox,\n                    name: \"ReturnItems\",\n                    value: \"items\",\n                    children: itemList\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 21\n                  }, this), !Returning ? null : /*#__PURE__*/_jsxDEV(FormControl, {\n                    accepter: InputPicker,\n                    data: reasons,\n                    placeholder: \"Select Reason\",\n                    size: \"md\",\n                    onChange: value => console.log(value),\n                    name: \"selectReason\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              name: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                name: \"email\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n                tooltip: true,\n                children: \"This is where will will send the return label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                name: \"name\",\n                placeholder: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n                tooltip: true,\n                children: \"This field is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleSubmit,\n                icon: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: \"arrow-right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 25\n                }, this),\n                disabled: showing ? false : true,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \");\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  activeOrder: state.activeOrder\n});\n\nexport default connect(mapStateToProps)(ItemSelect);","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js"],"names":["React","useEffect","useState","ItemCard","connect","fetchMyOrder","fetch","reasons","HelpBlock","Form","FormControl","FormGroup","IconButton","Icon","FlexboxGrid","Checkbox","InputPicker","CheckboxGroup","Schema","ItemSelect","Component","render","ArrayType","StringType","NumberType","Types","model","Model","ReturnItems","showing","Returning","setReturing","returnBasket","setReturnBasket","formValue","email","name","returnId","selectReason","handleSubmit","console","log","handleSw","value","itemList","activeOrder","map","items","id","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch } from '../Actions';\nimport { reasons } from '../components/reasons';\n\nimport {\n  HelpBlock,\n  Form,\n  FormControl,\n  FormGroup,\n  IconButton,\n  Icon,\n  FlexboxGrid,\n  Checkbox,\n  InputPicker,\n  CheckboxGroup,\n  Schema,\n} from 'rsuite';\n\nclass ItemSelect extends Component {\n  render() {\n    const { ArrayType, StringType, NumberType } = Schema.Types;\n    const model = Schema.Model({\n      ReturnItems: ArrayType(),\n    });\n\n    const showing = true;\n\n    const [Returning, setReturing] = useState(false);\n    const [returnBasket, setReturnBasket] = useState([]);\n\n    const formValue = {\n      email: '',\n      name: '',\n      returnId: 'Chrome',\n      selectReason: ['open'],\n    };\n\n    const handleSubmit = () => {\n      console.log('yoo');\n    };\n\n    const handleSw = (value) => {\n      console.log(value);\n    };\n\n    console.log(setReturnBasket);\n\n    const itemList = activeOrder.map((items) => {\n      return (\n        <Checkbox key={items.id}>\n          <ItemCard items={items} />\n        </Checkbox>\n      );\n    });\n\n    return (\n      <div>\n        <FlexboxGrid justify='center'>\n          <FlexboxGrid.Item colspan={18}>\n            <h1>Returns</h1>\n          </FlexboxGrid.Item>\n          <FlexboxGrid.Item colspan={18}>\n            <h4>Order Number:</h4>\n          </FlexboxGrid.Item>\n          <FlexboxGrid.Item colspan={20}>\n            <Form\n              model={model}\n              fluid\n              onChange={(formValue) => {\n                console.log({ formValue });\n              }}\n            >\n              <FormGroup name='items'>\n                <FlexboxGrid justify='space-around' align='bottom'>\n                  <FlexboxGrid.Item>\n                    <FormControl\n                      accepter={Checkbox}\n                      name='ReturnItems'\n                      value='items'\n                    >\n                      {itemList}\n                    </FormControl>\n\n                    {!Returning ? null : (\n                      <FormControl\n                        accepter={InputPicker}\n                        data={reasons}\n                        placeholder='Select Reason'\n                        size='md'\n                        onChange={(value) => console.log(value)}\n                        name='selectReason'\n                      />\n                    )}\n                  </FlexboxGrid.Item>\n                </FlexboxGrid>\n              </FormGroup>\n\n              <FormGroup name='info'>\n                <FormControl name='email' placeholder='Email' />\n                <HelpBlock tooltip>\n                  This is where will will send the return label\n                </HelpBlock>\n              </FormGroup>\n\n              <FormGroup>\n                <FormControl name='name' placeholder='Name' />\n                <HelpBlock tooltip>This field is required</HelpBlock>\n              </FormGroup>\n\n              <FormGroup>\n                <IconButton\n                  onClick={handleSubmit}\n                  icon={<Icon icon='arrow-right' />}\n                  disabled={showing ? false : true}\n                >\n                  Next\n                </IconButton>\n              </FormGroup>\n            </Form>\n          </FlexboxGrid.Item>\n        </FlexboxGrid>\n        );\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  activeOrder: state.activeOrder,\n});\n\nexport default connect(mapStateToProps)(ItemSelect);\n"]},"metadata":{},"sourceType":"module"}