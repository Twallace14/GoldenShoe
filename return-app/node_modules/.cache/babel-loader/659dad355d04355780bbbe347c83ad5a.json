{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch } from '../Actions';\nimport { reasons } from '../components/reasons';\nimport { HelpBlock, Form, FormControl, FormGroup, IconButton, Icon, FlexboxGrid, Checkbox, InputPicker } from 'rsuite';\n\nconst ItemSelect = ({\n  activeOrder\n}) => {\n  _s();\n\n  const showing = true;\n  const [Returning, setReturing] = useState(true);\n  const [returnBasket, setReturnBasket] = useState([]);\n  const formValue = {\n    email: '',\n    name: '',\n    returnId: 'Chrome',\n    selectReason: ['open']\n  };\n  useEffect(() => {\n    fetchMyOrder();\n  }, []);\n\n  const handleSubmit = () => {\n    console.log('yoo');\n  };\n\n  const handleSw = value => {\n    console.log(value);\n  };\n\n  console.log(setReturnBasket);\n  return /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n      colspan: 18,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Returns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n      colspan: 18,\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Order Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n      colspan: 20,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        fluid: true,\n        onChange: formValue => {\n          console.log({\n            formValue\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: activeOrder && activeOrder.map(items => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                accepter: Checkbox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n                justify: \"space-around\",\n                align: \"bottom\",\n                children: [/*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n                  colspan: 18,\n                  children: /*#__PURE__*/_jsxDEV(ItemCard, {\n                    items: items\n                  }, items.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n                  colspan: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                    onChange: value => console.log(value),\n                    value: items.id,\n                    name: \"returnIndicator\",\n                    children: \"Return\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 25\n                  }, this), !Returning ? null : /*#__PURE__*/_jsxDEV(InputPicker, {\n                    data: reasons,\n                    placeholder: \"Select Reason\",\n                    size: \"lg\",\n                    onChange: value => console.log(value),\n                    name: \"selectReason\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            accepter: Checkbox,\n            name: \"selector\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            name: \"email\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n            tooltip: true,\n            children: \"This is where will will send the return label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            name: \"name\",\n            placeholder: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n            tooltip: true,\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleSubmit,\n            icon: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"arrow-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this),\n            disabled: showing ? false : true,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemSelect, \"YQCoCN6p8QOPK/kayeMuIkejDAc=\");\n\n_c = ItemSelect;\n\nconst mapStateToProps = state => ({\n  activeOrder: state.activeOrder\n});\n\nexport default connect(mapStateToProps)(ItemSelect);\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemSelect\");","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js"],"names":["React","useEffect","useState","ItemCard","connect","fetchMyOrder","fetch","reasons","HelpBlock","Form","FormControl","FormGroup","IconButton","Icon","FlexboxGrid","Checkbox","InputPicker","ItemSelect","activeOrder","showing","Returning","setReturing","returnBasket","setReturnBasket","formValue","email","name","returnId","selectReason","handleSubmit","console","log","handleSw","value","map","items","id","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch } from '../Actions';\nimport { reasons } from '../components/reasons';\n\nimport {\n  HelpBlock,\n  Form,\n  FormControl,\n  FormGroup,\n  IconButton,\n  Icon,\n  FlexboxGrid,\n  Checkbox,\n  InputPicker,\n} from 'rsuite';\n\nconst ItemSelect = ({ activeOrder }) => {\n  const showing = true;\n\n  const [Returning, setReturing] = useState(true);\n  const [returnBasket, setReturnBasket] = useState([]);\n\n  const formValue = {\n    email: '',\n    name: '',\n    returnId: 'Chrome',\n    selectReason: ['open'],\n  };\n\n  useEffect(() => {\n    fetchMyOrder();\n  }, []);\n\n  const handleSubmit = () => {\n    console.log('yoo');\n  };\n\n  const handleSw = (value) => {\n    console.log(value);\n  };\n\n  console.log(setReturnBasket);\n\n  return (\n    <FlexboxGrid justify='center'>\n      <FlexboxGrid.Item colspan={18}>\n        <h1>Returns</h1>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item colspan={18}>\n        <h4>Order Number:</h4>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item colspan={20}>\n        <Form\n          fluid\n          onChange={(formValue) => {\n            console.log({ formValue });\n          }}\n        >\n          <FormGroup>\n            {activeOrder &&\n              activeOrder.map((items) => {\n                return (\n                  <div>\n                    <FormControl accepter={Checkbox} />\n                    <FlexboxGrid justify='space-around' align='bottom'>\n                      <FlexboxGrid.Item colspan={18}>\n                        <ItemCard items={items} key={items.id} />\n                      </FlexboxGrid.Item>\n                      <FlexboxGrid.Item colspan={6}>\n                        <Checkbox\n                          onChange={(value) => console.log(value)}\n                          value={items.id}\n                          name='returnIndicator'\n                        >\n                          Return\n                        </Checkbox>\n                        {!Returning ? null : (\n                          <InputPicker\n                            data={reasons}\n                            placeholder='Select Reason'\n                            size='lg'\n                            onChange={(value) => console.log(value)}\n                            name='selectReason'\n                          />\n                        )}\n                      </FlexboxGrid.Item>\n                    </FlexboxGrid>\n                  </div>\n                );\n              })}\n          </FormGroup>\n\n          <FormGroup>\n            <FormControl accepter={Checkbox} name='selector' />\n          </FormGroup>\n\n          <FormGroup>\n            <FormControl name='email' placeholder='Email' />\n            <HelpBlock tooltip>\n              This is where will will send the return label\n            </HelpBlock>\n          </FormGroup>\n\n          <FormGroup>\n            <FormControl name='name' placeholder='Name' />\n            <HelpBlock tooltip>This field is required</HelpBlock>\n          </FormGroup>\n\n          <FormGroup>\n            <IconButton\n              onClick={handleSubmit}\n              icon={<Icon icon='arrow-right' />}\n              disabled={showing ? false : true}\n            >\n              Next\n            </IconButton>\n          </FormGroup>\n        </Form>\n      </FlexboxGrid.Item>\n    </FlexboxGrid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  activeOrder: state.activeOrder,\n});\n\nexport default connect(mapStateToProps)(ItemSelect);\n"]},"metadata":{},"sourceType":"module"}