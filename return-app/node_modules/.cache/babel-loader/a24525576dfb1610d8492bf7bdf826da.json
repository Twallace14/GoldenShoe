{"ast":null,"code":"import axios from 'axios';\nimport { OrderData } from '../Actions';\nimport { FETCH_ORDER_DATA } from '../Actions/types';\nconst initialState = {\n  orderdata: null\n};\nexport const userOrder = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FETCH_ORDER_DATA:\n      return { ...state,\n        orderdata: payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const Orders = () => async (dispatch, getState) => {\n  const orders = await axios.get('./RefundReasons.JSON').then(res => res.json());\n  dispatch(OrderData(orders));\n};","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/Reducers/userOrder.js"],"names":["axios","OrderData","FETCH_ORDER_DATA","initialState","orderdata","userOrder","state","type","payload","Orders","dispatch","getState","orders","get","then","res","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuB;AAAEI,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AACpE,UAAQD,IAAR;AACE,SAAKL,gBAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYF,QAAAA,SAAS,EAAEI;AAAvB,OAAP;;AAEF;AACE,aAAOF,KAAP;AALJ;AAOD,CARM;AAUP,OAAO,MAAMG,MAAM,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxD,QAAMC,MAAM,GAAG,MAAMZ,KAAK,CACvBa,GADkB,CACd,sBADc,EAElBC,IAFkB,CAEZC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFI,CAArB;AAGAN,EAAAA,QAAQ,CAACT,SAAS,CAACW,MAAD,CAAV,CAAR;AACD,CALM","sourcesContent":["import axios from 'axios';\nimport { OrderData } from '../Actions';\nimport { FETCH_ORDER_DATA } from '../Actions/types';\n\nconst initialState = {\n  orderdata: null,\n};\n\nexport const userOrder = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case FETCH_ORDER_DATA:\n      return { ...state, orderdata: payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const Orders = () => async (dispatch, getState) => {\n  const orders = await axios\n    .get('./RefundReasons.JSON')\n    .then((res) => res.json());\n  dispatch(OrderData(orders));\n};\n"]},"metadata":{},"sourceType":"module"}