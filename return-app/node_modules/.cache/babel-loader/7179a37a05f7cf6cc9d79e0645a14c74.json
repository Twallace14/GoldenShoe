{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js\";\nimport React, { Component } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch } from '../Actions';\nimport { reasons } from '../components/reasons';\nimport { HelpBlock, Form, FormControl, FormGroup, IconButton, Icon, FlexboxGrid, Checkbox, InputPicker, CheckboxGroup, Schema } from 'rsuite';\n\nclass ItemSelect extends Component {\n  render() {\n    const {\n      activeOrder\n    } = this.props;\n    console.log(activeOrder.payload);\n    const {\n      ArrayType\n    } = Schema.Types;\n    const model = Schema.Model({\n      ReturnItems: ArrayType()\n    });\n    const show = activeOrder.payload;\n    const showing = true;\n    console.log(show);\n\n    const handleSubmit = () => {\n      console.log('yoo');\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FlexboxGrid, {\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n          colspan: 18,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Returns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n          colspan: 18,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Order Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n          colspan: 20,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            model: model,\n            fluid: true,\n            onChange: formValue => {\n              console.log({\n                formValue\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              name: \"items\",\n              children: /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n                justify: \"space-around\",\n                align: \"bottom\",\n                children: /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    accepter: CheckboxGroup,\n                    name: \"ReturnItems\",\n                    children: show && show.map(items => {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                          value: {\n                            return: true,\n                            name: items.itemName,\n                            reason: null,\n                            size: items.size\n                          },\n                          children: \"Return\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 64,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(ItemCard, {\n                          items: items\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 74,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                          name: items.itemName + 'reason',\n                          accepter: CheckboxGroup,\n                          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                            value: \"other\",\n                            children: \"other\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 79,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                            value: \"size\",\n                            children: \"size\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 80,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                            value: \"color\",\n                            children: \"colour\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 81,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 75,\n                          columnNumber: 31\n                        }, this)]\n                      }, items.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              name: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                name: \"email\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n                tooltip: true,\n                children: \"This is where will will send the return label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                name: \"name\",\n                placeholder: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n                tooltip: true,\n                children: \"This field is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleSubmit,\n                icon: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: \"arrow-right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this),\n                disabled: showing ? false : true,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \");\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  activeOrder: state.activeOrder.basket\n});\n\nexport default connect(mapStateToProps)(ItemSelect);","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js"],"names":["React","Component","ItemCard","connect","fetchMyOrder","fetch","reasons","HelpBlock","Form","FormControl","FormGroup","IconButton","Icon","FlexboxGrid","Checkbox","InputPicker","CheckboxGroup","Schema","ItemSelect","render","activeOrder","props","console","log","payload","ArrayType","Types","model","Model","ReturnItems","show","showing","handleSubmit","formValue","map","items","return","name","itemName","reason","size","id","mapStateToProps","state","basket"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch } from '../Actions';\nimport { reasons } from '../components/reasons';\n\nimport {\n  HelpBlock,\n  Form,\n  FormControl,\n  FormGroup,\n  IconButton,\n  Icon,\n  FlexboxGrid,\n  Checkbox,\n  InputPicker,\n  CheckboxGroup,\n  Schema,\n} from 'rsuite';\n\nclass ItemSelect extends Component {\n  render() {\n    const { activeOrder } = this.props;\n    console.log(activeOrder.payload);\n    const { ArrayType } = Schema.Types;\n    const model = Schema.Model({\n      ReturnItems: ArrayType(),\n    });\n\n    const show = activeOrder.payload;\n    const showing = true;\n\n    console.log(show);\n\n    const handleSubmit = () => {\n      console.log('yoo');\n    };\n\n    return (\n      <div>\n        <FlexboxGrid justify='center'>\n          <FlexboxGrid.Item colspan={18}>\n            <h1>Returns</h1>\n          </FlexboxGrid.Item>\n          <FlexboxGrid.Item colspan={18}>\n            <h4>Order Number:</h4>\n          </FlexboxGrid.Item>\n          <FlexboxGrid.Item colspan={20}>\n            <Form\n              model={model}\n              fluid\n              onChange={(formValue) => {\n                console.log({ formValue });\n              }}\n            >\n              <FormGroup name='items'>\n                <FlexboxGrid justify='space-around' align='bottom'>\n                  <FlexboxGrid.Item>\n                    <FormControl accepter={CheckboxGroup} name='ReturnItems'>\n                      {show &&\n                        show.map((items) => {\n                          return (\n                            <div key={items.id}>\n                              <Checkbox\n                                value={{\n                                  return: true,\n                                  name: items.itemName,\n                                  reason: null,\n                                  size: items.size,\n                                }}\n                              >\n                                Return\n                              </Checkbox>\n                              <ItemCard items={items} />\n                              <FormControl\n                                name={items.itemName + 'reason'}\n                                accepter={CheckboxGroup}\n                              >\n                                <Checkbox value='other'>other</Checkbox>\n                                <Checkbox value='size'>size</Checkbox>\n                                <Checkbox value='color'>colour</Checkbox>\n                              </FormControl>\n                            </div>\n                          );\n                        })}\n                    </FormControl>\n                  </FlexboxGrid.Item>\n                </FlexboxGrid>\n              </FormGroup>\n\n              <FormGroup name='info'>\n                <FormControl name='email' placeholder='Email' />\n                <HelpBlock tooltip>\n                  This is where will will send the return label\n                </HelpBlock>\n              </FormGroup>\n\n              <FormGroup>\n                <FormControl name='name' placeholder='Name' />\n                <HelpBlock tooltip>This field is required</HelpBlock>\n              </FormGroup>\n\n              <FormGroup>\n                <IconButton\n                  onClick={handleSubmit}\n                  icon={<Icon icon='arrow-right' />}\n                  disabled={showing ? false : true}\n                >\n                  Next\n                </IconButton>\n              </FormGroup>\n            </Form>\n          </FlexboxGrid.Item>\n        </FlexboxGrid>\n        );\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeOrder: state.activeOrder.basket,\n});\n\nexport default connect(mapStateToProps)(ItemSelect);\n"]},"metadata":{},"sourceType":"module"}