{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/Returns.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { FetchOrderData, UserOrderSelection } from '../Actions';\nimport { Redirect } from 'react-router-dom';\nimport { Input, Whisper, Tooltip, Button, HelpBlock, FormControl, ControlLabel, FormGroup, FlexboxGrid, Form, Panel } from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport { userOrder } from '../Reducers/userOrder';\nimport activeReturn from '../Reducers/activeReturn';\n\nconst Returns = ({\n  UserOrder,\n  activeOrder,\n  isLoading\n}) => {\n  _s();\n\n  const [userOrderNumber, setuserOrderNumer] = useState();\n  const history = useHistory();\n\n  const HandleSubmit = async () => {\n    const find = await UserOrder(userOrderNumber.formValue.orderNumber);\n\n    if (activeOrder) {\n      history.push('/myreturns');\n    } else {\n      console.log('empty');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        height: 600\n      },\n      children: /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(Panel, {\n          header: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"returns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 26\n          }, this),\n          bordered: true,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onChange: formValue => {\n              setuserOrderNumer({\n                formValue\n              });\n            },\n            fluid: true,\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n                children: \"Order number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                name: \"orderNumber\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n                tooltip: true,\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: HandleSubmit,\n              loading: isLoading ? true : false,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Returns, \"A9y6rdUiGFkTFIX9jQu/efmGqBY=\", true);\n\n_c = Returns;\n\nconst mapStateToProps = state => ({\n  activeOrder: state.activeOrder.userOrder,\n  isLoading: state.activeOrder.loading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    UserOrder: userOrderNum => dispatch(FetchOrderData(userOrderNum))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Returns);\n\nvar _c;\n\n$RefreshReg$(_c, \"Returns\");","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/Returns.js"],"names":["axios","React","useState","useEffect","connect","FetchOrderData","UserOrderSelection","Redirect","Input","Whisper","Tooltip","Button","HelpBlock","FormControl","ControlLabel","FormGroup","FlexboxGrid","Form","Panel","userOrder","activeReturn","Returns","UserOrder","activeOrder","isLoading","userOrderNumber","setuserOrderNumer","history","useHistory","HandleSubmit","find","formValue","orderNumber","push","console","log","height","mapStateToProps","state","loading","mapDispatchToProps","dispatch","userOrderNum"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { FetchOrderData, UserOrderSelection } from '../Actions';\nimport { Redirect } from 'react-router-dom';\n\nimport {\n  Input,\n  Whisper,\n  Tooltip,\n  Button,\n  HelpBlock,\n  FormControl,\n  ControlLabel,\n  FormGroup,\n  FlexboxGrid,\n  Form,\n  Panel,\n} from 'rsuite';\n\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport { userOrder } from '../Reducers/userOrder';\nimport activeReturn from '../Reducers/activeReturn';\n\nconst Returns = ({ UserOrder, activeOrder, isLoading }) => {\n  const [userOrderNumber, setuserOrderNumer] = useState();\n\n  const history = useHistory();\n\n  const HandleSubmit = async () => {\n    const find = await UserOrder(userOrderNumber.formValue.orderNumber);\n    if (activeOrder) {\n      history.push('/myreturns');\n    } else {\n      console.log('empty');\n    }\n  };\n\n  return (\n    <div>\n      <FlexboxGrid justify='center' align='middle' style={{ height: 600 }}>\n        <FlexboxGrid.Item colspan={18}>\n          <Panel header={<h2>returns</h2>} bordered>\n            <Form\n              onChange={(formValue) => {\n                setuserOrderNumer({ formValue });\n              }}\n              fluid\n            >\n              <FormGroup>\n                <ControlLabel>Order number</ControlLabel>\n                <FormControl name='orderNumber' />\n                <HelpBlock tooltip>Required</HelpBlock>\n              </FormGroup>\n\n              <Button onClick={HandleSubmit} loading={isLoading ? true : false}>\n                Submit\n              </Button>\n            </Form>\n          </Panel>\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  activeOrder: state.activeOrder.userOrder,\n  isLoading: state.activeOrder.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    UserOrder: (userOrderNum) => dispatch(FetchOrderData(userOrderNum)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Returns);\n"]},"metadata":{},"sourceType":"module"}