{"ast":null,"code":"import axios from 'axios';\nimport generator from 'generate-serial-number';\nexport const FetchOrderData = orders => {\n  return async dispatch => {\n    console.log(orders);\n    dispatch({\n      type: 'FIND_MY_ORDER'\n    });\n    const itemList = await axios.post('http://localhost:3000/fetchOrderedItems', {\n      orderNum: orders\n    });\n    console.log(itemList);\n\n    if (itemList.data !== 'not found' || itemList.data) {\n      dispatch(OrderData(itemList.data));\n    } else {\n      dispatch({\n        type: 'NOT_FOUND'\n      });\n    }\n  };\n};\n_c = FetchOrderData;\nexport const PostReturnData = data => {\n  return async dispatch => {\n    data.returnNo = generator.generate(12);\n    console.log(data);\n    const move = await axios.post('http://localhost:3000/fetchOrderedItems', {\n      returnData: data\n    });\n    dispatch({\n      type: 'RETURNING_ITEMS',\n      payload: data\n    });\n  };\n};\n_c2 = PostReturnData;\nexport const PostReturnReasons = reasons => {\n  return async dispatch => {\n    console.log(reasons);\n    const plachldr = await axios.post('http://localhost:3000/postReturnReasons', {\n      returnReasons: reasons\n    });\n    dispatch({\n      type: 'RETURNING_REASONS',\n      payload: reasons\n    });\n  };\n};\n_c3 = PostReturnReasons;\nexport const NewReturn = () => ({\n  type: 'NEW_RETURN'\n});\n_c4 = NewReturn;\nexport const fetch = async () => {\n  await axios.get('./RefundReasons.JSON').then(res => console.log(res.data));\n};\nexport const UserOrderSelection = userOrderNum => ({\n  type: 'UPDATE_ORDER_NUMBER',\n  payload: userOrderNum\n});\n_c5 = UserOrderSelection;\nexport const UpdateReturn = returningItemsArray => ({\n  type: 'RETURNING_ITEMS',\n  payload: returningItemsArray\n});\n_c6 = UpdateReturn;\nexport const OrderData = orders => ({\n  type: 'MY_ORDER',\n  payload: orders\n});\n_c7 = OrderData;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"FetchOrderData\");\n$RefreshReg$(_c2, \"PostReturnData\");\n$RefreshReg$(_c3, \"PostReturnReasons\");\n$RefreshReg$(_c4, \"NewReturn\");\n$RefreshReg$(_c5, \"UserOrderSelection\");\n$RefreshReg$(_c6, \"UpdateReturn\");\n$RefreshReg$(_c7, \"OrderData\");","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/Actions/index.js"],"names":["axios","generator","FetchOrderData","orders","dispatch","console","log","type","itemList","post","orderNum","data","OrderData","PostReturnData","returnNo","generate","move","returnData","payload","PostReturnReasons","reasons","plachldr","returnReasons","NewReturn","fetch","get","then","res","UserOrderSelection","userOrderNum","UpdateReturn","returningItemsArray"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAO,MAAMC,cAAc,GAAIC,MAAD,IAAY;AACxC,SAAO,MAAOC,QAAP,IAAoB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGA,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAN,CACrB,yCADqB,EAErB;AACEC,MAAAA,QAAQ,EAAEP;AADZ,KAFqB,CAAvB;AAMAE,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;;AAEA,QAAIA,QAAQ,CAACG,IAAT,KAAkB,WAAlB,IAAiCH,QAAQ,CAACG,IAA9C,EAAoD;AAClDP,MAAAA,QAAQ,CAACQ,SAAS,CAACJ,QAAQ,CAACG,IAAV,CAAV,CAAR;AACD,KAFD,MAEO;AACLP,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD;AACF,GApBD;AAqBD,CAtBM;KAAML,c;AAwBb,OAAO,MAAMW,cAAc,GAAIF,IAAD,IAAU;AACtC,SAAO,MAAOP,QAAP,IAAoB;AACzBO,IAAAA,IAAI,CAACG,QAAL,GAAgBb,SAAS,CAACc,QAAV,CAAmB,EAAnB,CAAhB;AAEAV,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AAEA,UAAMK,IAAI,GAAG,MAAMhB,KAAK,CAACS,IAAN,CAAW,yCAAX,EAAsD;AACvEQ,MAAAA,UAAU,EAAEN;AAD2D,KAAtD,CAAnB;AAIAP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,iBADC;AAEPW,MAAAA,OAAO,EAAEP;AAFF,KAAD,CAAR;AAID,GAbD;AAcD,CAfM;MAAME,c;AAiBb,OAAO,MAAMM,iBAAiB,GAAIC,OAAD,IAAa;AAC5C,SAAO,MAAOhB,QAAP,IAAoB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYc,OAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACS,IAAN,CACrB,yCADqB,EAErB;AACEa,MAAAA,aAAa,EAAEF;AADjB,KAFqB,CAAvB;AAOAhB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,mBADC;AAEPW,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GAbD;AAcD,CAfM;MAAMD,iB;AAiBb,OAAO,MAAMI,SAAS,GAAG,OAAO;AAC9BhB,EAAAA,IAAI,EAAE;AADwB,CAAP,CAAlB;MAAMgB,S;AAIb,OAAO,MAAMC,KAAK,GAAG,YAAY;AAC/B,QAAMxB,KAAK,CAACyB,GAAN,CAAU,sBAAV,EAAkCC,IAAlC,CAAwCC,GAAD,IAAStB,OAAO,CAACC,GAAR,CAAYqB,GAAG,CAAChB,IAAhB,CAAhD,CAAN;AACD,CAFM;AAIP,OAAO,MAAMiB,kBAAkB,GAAIC,YAAD,KAAmB;AACnDtB,EAAAA,IAAI,EAAE,qBAD6C;AAEnDW,EAAAA,OAAO,EAAEW;AAF0C,CAAnB,CAA3B;MAAMD,kB;AAKb,OAAO,MAAME,YAAY,GAAIC,mBAAD,KAA0B;AACpDxB,EAAAA,IAAI,EAAE,iBAD8C;AAEpDW,EAAAA,OAAO,EAAEa;AAF2C,CAA1B,CAArB;MAAMD,Y;AAKb,OAAO,MAAMlB,SAAS,GAAIT,MAAD,KAAa;AACpCI,EAAAA,IAAI,EAAE,UAD8B;AAEpCW,EAAAA,OAAO,EAAEf;AAF2B,CAAb,CAAlB;MAAMS,S","sourcesContent":["import axios from 'axios';\nimport generator from 'generate-serial-number';\n\nexport const FetchOrderData = (orders) => {\n  return async (dispatch) => {\n    console.log(orders);\n    dispatch({\n      type: 'FIND_MY_ORDER',\n    });\n    const itemList = await axios.post(\n      'http://localhost:3000/fetchOrderedItems',\n      {\n        orderNum: orders,\n      }\n    );\n    console.log(itemList);\n\n    if (itemList.data !== 'not found' || itemList.data) {\n      dispatch(OrderData(itemList.data));\n    } else {\n      dispatch({\n        type: 'NOT_FOUND',\n      });\n    }\n  };\n};\n\nexport const PostReturnData = (data) => {\n  return async (dispatch) => {\n    data.returnNo = generator.generate(12);\n\n    console.log(data);\n\n    const move = await axios.post('http://localhost:3000/fetchOrderedItems', {\n      returnData: data,\n    });\n\n    dispatch({\n      type: 'RETURNING_ITEMS',\n      payload: data,\n    });\n  };\n};\n\nexport const PostReturnReasons = (reasons) => {\n  return async (dispatch) => {\n    console.log(reasons);\n    const plachldr = await axios.post(\n      'http://localhost:3000/postReturnReasons',\n      {\n        returnReasons: reasons,\n      }\n    );\n\n    dispatch({\n      type: 'RETURNING_REASONS',\n      payload: reasons,\n    });\n  };\n};\n\nexport const NewReturn = () => ({\n  type: 'NEW_RETURN',\n});\n\nexport const fetch = async () => {\n  await axios.get('./RefundReasons.JSON').then((res) => console.log(res.data));\n};\n\nexport const UserOrderSelection = (userOrderNum) => ({\n  type: 'UPDATE_ORDER_NUMBER',\n  payload: userOrderNum,\n});\n\nexport const UpdateReturn = (returningItemsArray) => ({\n  type: 'RETURNING_ITEMS',\n  payload: returningItemsArray,\n});\n\nexport const OrderData = (orders) => ({\n  type: 'MY_ORDER',\n  payload: orders,\n});\n"]},"metadata":{},"sourceType":"module"}