{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch } from '../Actions';\nimport { reasons } from '../components/reasons';\nimport { HelpBlock, Form, FormControl, FormGroup, IconButton, Icon, FlexboxGrid, Checkbox, InputPicker, CheckboxGroup, Schema } from 'rsuite';\nimport { useHistory } from 'react-router';\n\nconst ItemSelect = ({\n  activeOrder\n}) => {\n  _s();\n\n  console.log(activeOrder);\n  const {\n    ArrayType\n  } = Schema.Types;\n  const model = Schema.Model({\n    ReturnItems: ArrayType()\n  });\n  const show = activeOrder;\n  const showing = true;\n  console.log(show);\n\n  const handleSubmit = () => {\n    console.log('yoo');\n  };\n\n  const history = useHistory();\n\n  const handleNext = () => {\n    history.push('/myreturns');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FlexboxGrid, {\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Returns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 18,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Order Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n        colspan: 20,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          model: model,\n          fluid: true,\n          onChange: formValue => {\n            console.log(formValue.reason);\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            name: \"items\",\n            children: /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n              justify: \"space-around\",\n              align: \"bottom\",\n              children: /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  accepter: CheckboxGroup,\n                  name: \"ReturnItems\",\n                  children: show && show.map(items => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                        value: {\n                          return: true,\n                          name: items.itemName,\n                          reason: null,\n                          size: items.size\n                        },\n                        children: \"Return\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 69,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ItemCard, {\n                        items: items\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                        name: items.itemName + 'reason',\n                        accepter: CheckboxGroup,\n                        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                          value: \"other\",\n                          children: \"other\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 84,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                          value: \"size\",\n                          children: \"size\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 85,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                          value: \"color\",\n                          children: \"colour\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 86,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 29\n                      }, this)]\n                    }, items.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            name: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              name: \"email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n              tooltip: true,\n              children: \"This is where will will send the return label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              name: \"name\",\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HelpBlock, {\n              tooltip: true,\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleNext,\n              icon: /*#__PURE__*/_jsxDEV(Icon, {\n                icon: \"arrow-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this),\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemSelect, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ItemSelect;\n\nconst mapStateToProps = state => ({\n  activeOrder: state.activeOrder.basket\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps)(ItemSelect);\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemSelect\");","map":{"version":3,"sources":["/Users/tyronewallace/Desktop/Blueprints/returns/src/pages/ItemSelect.js"],"names":["React","Component","ItemCard","connect","fetchMyOrder","fetch","reasons","HelpBlock","Form","FormControl","FormGroup","IconButton","Icon","FlexboxGrid","Checkbox","InputPicker","CheckboxGroup","Schema","useHistory","ItemSelect","activeOrder","console","log","ArrayType","Types","model","Model","ReturnItems","show","showing","handleSubmit","history","handleNext","push","formValue","reason","map","items","return","name","itemName","size","id","mapStateToProps","state","basket","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ItemCard from '../components/ItemCard';\nimport { connect } from 'react-redux';\nimport { fetchMyOrder, fetch } from '../Actions';\nimport { reasons } from '../components/reasons';\n\nimport {\n  HelpBlock,\n  Form,\n  FormControl,\n  FormGroup,\n  IconButton,\n  Icon,\n  FlexboxGrid,\n  Checkbox,\n  InputPicker,\n  CheckboxGroup,\n  Schema,\n} from 'rsuite';\nimport { useHistory } from 'react-router';\n\nconst ItemSelect = ({ activeOrder }) => {\n  console.log(activeOrder);\n  const { ArrayType } = Schema.Types;\n  const model = Schema.Model({\n    ReturnItems: ArrayType(),\n  });\n\n  const show = activeOrder;\n  const showing = true;\n\n  console.log(show);\n\n  const handleSubmit = () => {\n    console.log('yoo');\n  };\n\n  const history = useHistory();\n\n  const handleNext = () => {\n    history.push('/myreturns');\n  };\n\n  return (\n    <div>\n      <FlexboxGrid justify='center'>\n        <FlexboxGrid.Item colspan={18}>\n          <h1>Returns</h1>\n        </FlexboxGrid.Item>\n        <FlexboxGrid.Item colspan={18}>\n          <h4>Order Number:</h4>\n        </FlexboxGrid.Item>\n        <FlexboxGrid.Item colspan={20}>\n          <Form\n            model={model}\n            fluid\n            onChange={(formValue) => {\n              console.log(formValue.reason);\n            }}\n          >\n            <FormGroup name='items'>\n              <FlexboxGrid justify='space-around' align='bottom'>\n                <FlexboxGrid.Item>\n                  <FormControl accepter={CheckboxGroup} name='ReturnItems'>\n                    {show &&\n                      show.map((items) => {\n                        return (\n                          <div key={items.id}>\n                            <Checkbox\n                              value={{\n                                return: true,\n                                name: items.itemName,\n                                reason: null,\n                                size: items.size,\n                              }}\n                            >\n                              Return\n                            </Checkbox>\n                            <ItemCard items={items} />\n                            <FormControl\n                              name={items.itemName + 'reason'}\n                              accepter={CheckboxGroup}\n                            >\n                              <Checkbox value='other'>other</Checkbox>\n                              <Checkbox value='size'>size</Checkbox>\n                              <Checkbox value='color'>colour</Checkbox>\n                            </FormControl>\n                          </div>\n                        );\n                      })}\n                  </FormControl>\n                </FlexboxGrid.Item>\n              </FlexboxGrid>\n            </FormGroup>\n\n            <FormGroup name='info'>\n              <FormControl name='email' placeholder='Email' />\n              <HelpBlock tooltip>\n                This is where will will send the return label\n              </HelpBlock>\n            </FormGroup>\n\n            <FormGroup>\n              <FormControl name='name' placeholder='Name' />\n              <HelpBlock tooltip>This field is required</HelpBlock>\n            </FormGroup>\n\n            <FormGroup>\n              <IconButton\n                onClick={handleNext}\n                icon={<Icon icon='arrow-right' />}\n              >\n                Next\n              </IconButton>\n            </FormGroup>\n          </Form>\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n      );\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  activeOrder: state.activeOrder.basket,\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps)(ItemSelect);\n"]},"metadata":{},"sourceType":"module"}